{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pedro\\\\Documents\\\\chat\\\\client\\\\src\\\\components\\\\Chat\\\\Chat.js\";\nimport React, { useState, useEffect } from \"react\";\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\nimport \"./Chat.css\";\nimport InfoBar from \"../InfoBar/InfoBar\";\nimport Input from \"../Input/Input\";\nimport Messages from \"../Messages/Messages\";\nlet socket;\n\nconst Chat = ({\n  location\n}) => {\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [users, setUsers] = useState([]);\n  const ENDPOINT = \"localhost:8081\";\n  useEffect(() => {\n    const {\n      name,\n      room\n    } = queryString.parse(location.search);\n    socket = io(ENDPOINT);\n    setName(name);\n    setRoom(room);\n    socket.emit('join', {\n      name,\n      room\n    }, () => {});\n    return () => {\n      socket.emit(\"disconnect\");\n      socket.off();\n    };\n  }, [ENDPOINT, location.search]);\n  useEffect(() => {\n    socket.on(\"message\", message => {\n      setMessages(msgs => [...msgs, message]);\n    });\n    socket.on(\"roomData\", ({\n      users\n    }) => {\n      setUsers(users);\n    });\n  }, []);\n\n  const sendMessage = event => {\n    event.preventDefault();\n\n    if (message) {\n      socket.emit(\"sendMessage\", message, () => setMessage(''));\n    }\n  };\n\n  console.log(message, messages);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"outerContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InfoBar, {\n    room: room,\n    name: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Messages, {\n    messages: messages,\n    name: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    message: message,\n    setMessage: setMessage,\n    sendMessage: sendMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default Chat;","map":{"version":3,"sources":["C:/Users/Pedro/Documents/chat/client/src/components/Chat/Chat.js"],"names":["React","useState","useEffect","queryString","io","InfoBar","Input","Messages","socket","Chat","location","name","setName","room","setRoom","message","setMessage","messages","setMessages","users","setUsers","ENDPOINT","parse","search","emit","off","on","msgs","sendMessage","event","preventDefault","console","log"],"mappings":"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","sourcesContent":["import React, {useState, useEffect } from \"react\"\r\nimport queryString from 'query-string'\r\nimport io from 'socket.io-client'\r\n\r\nimport \"./Chat.css\"\r\nimport InfoBar from \"../InfoBar/InfoBar\"\r\nimport Input from \"../Input/Input\"\r\nimport Messages from \"../Messages/Messages\"\r\n\r\nlet socket;\r\n\r\nconst Chat = ({location}) => {\r\n    const [name, setName] = useState('')\r\n    const [room, setRoom] = useState('')\r\n    const [message, setMessage] = useState('')\r\n    const [messages, setMessages] = useState([])\r\n    const [users, setUsers] = useState([])\r\n    const ENDPOINT = \"localhost:8081\"\r\n    useEffect(() => {\r\n        const {name, room} = queryString.parse(location.search)\r\n\r\n        socket = io(ENDPOINT)\r\n\r\n        setName(name)\r\n        setRoom(room)\r\n\r\n        socket.emit('join', {name, room}, () => {\r\n            \r\n        })\r\n\r\n        return () => {\r\n            socket.emit(\"disconnect\")\r\n            socket.off()\r\n        }\r\n    }, [ENDPOINT, location.search])\r\n\r\n    useEffect(( ) => {\r\n        socket.on(\"message\", message => {\r\n          setMessages(msgs => [...msgs, message]);\r\n        });\r\n        socket.on(\"roomData\", ({ users }) => {\r\n          setUsers(users);\r\n        });\r\n    },  [ ]);\r\n\r\n    const sendMessage = (event) => {\r\n        event.preventDefault()\r\n        if(message) {\r\n            socket.emit(\"sendMessage\", message, () => setMessage(''))\r\n        }\r\n    }\r\n\r\n    console.log(message, messages)\r\n\r\n    return (\r\n        <div className=\"outerContainer\">\r\n            <div className=\"container\">\r\n                <InfoBar room={room} name={name}/>\r\n                <Messages messages={messages} name={name}/>\r\n                <Input message={message} setMessage={setMessage} sendMessage={sendMessage} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat;"]},"metadata":{},"sourceType":"module"}